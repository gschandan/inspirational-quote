{"version":3,"sources":["assets/Logo.svg","components/Logo.js","components/Context.js","components/Link.js","components/Navbar.js","components/Sidebar.js","assets/notebook.png","assets/quill.png","config.js","components/AddQuote.js","components/Quote.js","components/QuoteContainer.js","App.js","index.js"],"names":["Logo","src","logoSVG","alt","paddingTop","QuoteContext","createContext","QuoteContextProvider","props","useState","reload","setReload","addHidden","setAddHidden","quoteText","setQuoteText","author","setAuthor","Provider","value","children","Link","text","useContext","useDisclosure","isOpen","onOpen","onClose","size","variant","textTransform","letterSpacing","fontWeight","width","fontSize","aria-label","onClick","e","preventDefault","handleClick","textAlign","spacing","Navbar","flexDirection","alignContent","as","paddingBottom","Sidebar","gridRow","pos","left","h","w","boxShadow","justifyContent","marginTop","API_URL","AddQuote","formAuthor","setFormAuthor","formQuote","setFormQuote","toast","useToast","handleSubmit","a","fetch","headers","Accept","method","body","JSON","stringify","quote","response","json","data","console","log","title","status","duration","isClosable","direction","alignItems","isRequired","type","placeholder","onChange","target","marginLeft","isDisabled","padding","mt","Quote","useEffect","result","getQuote","gridColumn","zIndex","position","top","QuoteContainer","gridTemplateColumns","placeItems","QuoteImageContainer","boxSize","objectFit","alignSelf","justifySelf","Quill","display","paddingRight","App","theme","extendTheme","fonts","heading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.339cfd58.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.143d2172.svg\";","import { Img } from \"@chakra-ui/image\";\n// import logoPNG from \"../assets/logo_black_v2.png\";\nimport logoSVG from \"../assets/Logo.svg\";\nimport React from \"react\";\n\nconst Logo = () => {\n\treturn <Img src={logoSVG} alt=\"epigram logo\" paddingTop=\"10\" />;\n};\n\nexport default Logo;\n","import React, { useState, createContext } from \"react\";\n\nexport const QuoteContext = createContext();\n\nconst QuoteContextProvider = (props) => {\n\tconst [reload, setReload] = useState(false);\n\tconst [addHidden, setAddHidden] = useState(false);\n\tconst [quoteText, setQuoteText] = useState(\n\t\t\"I may not have gone where I intended to go, but I think I have ended up where I needed to be\"\n\t);\n\tconst [author, setAuthor] = useState(\"Douglas Adams\");\n\n\treturn (\n\t\t<QuoteContext.Provider\n\t\t\tvalue={{\n\t\t\t\treload,\n\t\t\t\tsetReload,\n\t\t\t\taddHidden,\n\t\t\t\tsetAddHidden,\n\t\t\t\tquoteText,\n\t\t\t\tsetQuoteText,\n\t\t\t\tauthor,\n\t\t\t\tsetAuthor,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</QuoteContext.Provider>\n\t);\n};\nexport default QuoteContextProvider;\n","import React, { useContext } from \"react\";\nimport { Button } from \"@chakra-ui/button\";\nimport { QuoteContext } from \"./Context\";\nimport {\n\tModal,\n\tModalOverlay,\n\tModalContent,\n\tModalHeader,\n\tModalBody,\n\tModalCloseButton,\n\tuseDisclosure,\n\tVStack,\n} from \"@chakra-ui/react\";\n\nconst Link = ({ text }) => {\n\tconst { reload, setReload, addHidden, setAddHidden } =\n\t\tuseContext(QuoteContext);\n\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\n\tconst handleClick = (e) => {\n\t\te.preventDefault();\n\t\tif (text === \"Random Quote\") {\n\t\t\tsetReload(!reload);\n\t\t}\n\t\tif (text === \"Add A Quote\") {\n\t\t\tsetAddHidden(!addHidden);\n\t\t}\n\t\tif (text === \"Help\") {\n\t\t\tonOpen();\n\t\t}\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tsize=\"lg\"\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\ttextTransform=\"uppercase\"\n\t\t\t\tletterSpacing=\"widest\"\n\t\t\t\tfontWeight=\"200\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\tfontSize=\"lg\"\n\t\t\t\taria-label={`link to ${text}`}\n\t\t\t\tonClick={(e) => handleClick(e)}\n\t\t\t>\n\t\t\t\t{text}\n\t\t\t</Button>\n\t\t\t<Modal isOpen={isOpen} onClose={onClose}>\n\t\t\t\t<ModalOverlay />\n\t\t\t\t<ModalContent>\n\t\t\t\t\t<ModalHeader textAlign=\"center\">About Epigram</ModalHeader>\n\t\t\t\t\t<ModalCloseButton />\n\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t<VStack spacing={5}>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tEpigram <i>[ ep-i-gram ]:</i> a pithy saying or\n\t\t\t\t\t\t\t\tremark expressing an idea in a clever and\n\t\t\t\t\t\t\t\tamusing way.\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\tClicking random quote will load a random\n\t\t\t\t\t\t\t\t\tquote from the database.\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\tClicking the add a quote link will bring up\n\t\t\t\t\t\t\t\t\tthe functionality to add a quote to the\n\t\t\t\t\t\t\t\t\tdatabse. Both quote text and author fields\n\t\t\t\t\t\t\t\t\tare required.\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</VStack>\n\t\t\t\t\t</ModalBody>\n\t\t\t\t</ModalContent>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default Link;\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/layout\";\n\nimport Link from \"./Link\";\n\nconst Navbar = () => {\n\treturn (\n\t\t<Flex\n\t\t\tflexDirection=\"column\"\n\t\t\talignContent=\"center\"\n\t\t\tas=\"nav\"\n\t\t\tpaddingBottom=\"10\"\n\t\t>\n\t\t\t<Link text=\"Random Quote\" />\n\t\t\t<Link text=\"Add A Quote\" />\n\t\t\t<Link text=\"Help\" />\n\t\t</Flex>\n\t);\n};\n\nexport default Navbar;\n","import { Divider, Grid } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport Logo from \"./Logo\";\nimport Navbar from \"./Navbar\";\n\nconst Sidebar = () => {\n\treturn (\n\t\t<Grid\n\t\t\tgridRow=\"1/3\"\n\t\t\tpos=\"sticky\"\n\t\t\tleft=\"5\"\n\t\t\th=\"100vh\"\n\t\t\tw=\"25vw\"\n\t\t\tboxShadow=\"0 4px 12px 0 rgba(0,0,0,0.1)\"\n\t\t\tjustifyContent=\"center\"\n\t\t>\n\t\t\t<Logo />\n\t\t\t<Divider marginTop=\"2\" />\n\t\t\t<Navbar />\n\t\t</Grid>\n\t);\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/notebook.9c183326.png\";","export default __webpack_public_path__ + \"static/media/quill.9434f84a.png\";","const API_PORT = 4001;\nexport const API_URL = `https://gschandan.dev/api/`;\n","import {\n\tFormControl,\n\tFormLabel,\n\tInput,\n\tButton,\n\tuseToast,\n\tFlex,\n} from \"@chakra-ui/react\";\nimport { useState, useContext } from \"react\";\nimport { API_URL } from \"../config\";\nimport { QuoteContext } from \"./Context\";\n\nconst AddQuote = () => {\n\tconst { reload, setReload, setAuthor, setQuoteText } =\n\t\tuseContext(QuoteContext);\n\n\tconst [formAuthor, setFormAuthor] = useState(\"\");\n\tconst [formQuote, setFormQuote] = useState(\"\");\n\n\tconst toast = useToast();\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst response = await fetch(API_URL + \"add\", {\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({ quote: formQuote, author: formAuthor }),\n\t\t});\n\t\tconst data = await response.json();\n\t\tconsole.log(data);\n\t\tsetQuoteText(await data.quoteText);\n\t\tsetAuthor(await data.author);\n\t\tsetReload(!reload);\n\t\ttoast({\n\t\t\ttitle: \"Successfully submitted the quote\",\n\t\t\tstatus: \"success\",\n\t\t\tduration: 2000,\n\t\t\tisClosable: true,\n\t\t});\n\t};\n\n\treturn (\n\t\t<Flex direction=\"column\" alignItems=\"center\">\n\t\t\t<Flex direction=\"row\">\n\t\t\t\t<FormControl isRequired>\n\t\t\t\t\t<FormLabel>Quote</FormLabel>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"I had a dream...\"\n\t\t\t\t\t\twidth=\"45vw\"\n\t\t\t\t\t\tonChange={(e) => setFormQuote(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl marginLeft=\"5\" isRequired>\n\t\t\t\t\t<FormLabel>Author</FormLabel>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"M.L. King\"\n\t\t\t\t\t\twidth=\"10vw\"\n\t\t\t\t\t\tonChange={(e) => setFormAuthor(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t</Flex>\n\t\t\t<Button\n\t\t\t\tisDisabled={formAuthor && formQuote ? false : true}\n\t\t\t\twidth=\"max-content\"\n\t\t\t\tpadding=\"5 5\"\n\t\t\t\tmt=\"4\"\n\t\t\t\tonClick={(e) => handleSubmit(e)}\n\t\t\t>\n\t\t\t\tSubmit\n\t\t\t</Button>\n\t\t</Flex>\n\t);\n};\n\nexport default AddQuote;\n","import React, { useEffect, useContext } from \"react\";\nimport { Heading, Box } from \"@chakra-ui/layout\";\nimport { API_URL } from \"../config\";\nimport { QuoteContext } from \"./Context\";\n\nconst Quote = () => {\n\tconst { reload, setReload, author, setAuthor, quoteText, setQuoteText } =\n\t\tuseContext(QuoteContext);\n\n\tuseEffect(() => {\n\t\tif (reload) {\n\t\t\tconst getQuote = async () => {\n\t\t\t\tconst result = await fetch(API_URL + \"random\");\n\t\t\t\tconst data = await result.json();\n\t\t\t\tsetQuoteText(data.quote);\n\t\t\t\tsetAuthor(data.author);\n\t\t\t};\n\t\t\tgetQuote();\n\t\t\tsetReload(false);\n\t\t}\n\t}, [setReload, reload, setAuthor, setQuoteText]);\n\n\treturn (\n\t\t<Box\n\t\t\t// position=\"absolute\"\n\t\t\t// top=\"20%\"\n\t\t\t// left=\"15%\"\n\t\t\tgridRow=\"1/2\"\n\t\t\tgridColumn=\"1\"\n\t\t\t// alignSelf=\"flex-end\"\n\t\t\t// justifySelf=\"flex-end\"\n\t\t>\n\t\t\t<Heading\n\t\t\t\tzIndex=\"10\"\n\t\t\t\tposition=\"relative\"\n\t\t\t\tleft=\"calc(2vh + 2vw)\"\n\t\t\t\ttop=\"30vh\"\n\t\t\t\tfontSize=\"calc(1vh + 2vw)\"\n\t\t\t\twidth=\"calc(50vh - 5vw)\"\n\t\t\t>\n\t\t\t\t{quoteText}\n\t\t\t</Heading>\n\t\t\t<Heading\n\t\t\t\tzIndex=\"10\"\n\t\t\t\tposition=\"absolute\"\n\t\t\t\tleft=\"35vw\"\n\t\t\t\ttop=\"50vh\"\n\t\t\t\tfontSize=\"calc(1vh + 1vw)\"\n\t\t\t>\n\t\t\t\t{author}\n\t\t\t</Heading>\n\t\t</Box>\n\t);\n};\n\nexport default Quote;\n","import { Img } from \"@chakra-ui/image\";\nimport { Container, Grid } from \"@chakra-ui/layout\";\nimport React, { useContext } from \"react\";\nimport QuoteImageContainer from \"../assets/notebook.png\";\nimport Quill from \"../assets/quill.png\";\nimport AddQuote from \"./AddQuote\";\nimport Quote from \"./Quote\";\nimport { QuoteContext } from \"./Context\";\n\nconst QuoteContainer = () => {\n\tconst { addHidden } = useContext(QuoteContext);\n\n\treturn (\n\t\t<Grid\n\t\t\tposition=\"relative\"\n\t\t\tgridTemplateColumns=\"3fr 1fr\"\n\t\t\tplaceItems=\"center\"\n\t\t>\n\t\t\t<Img\n\t\t\t\tsrc={QuoteImageContainer}\n\t\t\t\talt=\"notebook\"\n\t\t\t\tboxSize=\"80vh\"\n\t\t\t\tobjectFit=\"contain\"\n\t\t\t\tgridRow=\"1/3\"\n\t\t\t\tgridColumn=\"1\"\n\t\t\t\talignSelf=\"center\"\n\t\t\t\tjustifySelf=\"center\"\n\t\t\t/>\n\t\t\t<Quote />\n\t\t\t<Img\n\t\t\t\tsrc={Quill}\n\t\t\t\talt=\"quill\"\n\t\t\t\tboxSize=\"80vh\"\n\t\t\t\tobjectFit=\"contain\"\n\t\t\t\tgridRow=\"1/3\"\n\t\t\t\tgridColumn=\"2\"\n\t\t\t/>\n\t\t\t<Container\n\t\t\t\tgridRow=\"3\"\n\t\t\t\tdisplay={addHidden ? \"flex\" : \"none\"}\n\t\t\t\tpaddingRight=\"10\"\n\t\t\t>\n\t\t\t\t<AddQuote />\n\t\t\t</Container>\n\t\t</Grid>\n\t);\n};\n\nexport default QuoteContainer;\n","import { Grid } from \"@chakra-ui/layout\";\nimport Sidebar from \"../src/components/Sidebar\";\nimport QuoteContextProvider from \"./components/Context\";\nimport QuoteContainer from \"./components/QuoteContainer.js\";\n\nfunction App() {\n\treturn (\n\t\t<Grid gridTemplateColumns=\"1fr 3fr\">\n\t\t\t<QuoteContextProvider>\n\t\t\t\t<Sidebar />\n\t\t\t\t<QuoteContainer />\n\t\t\t</QuoteContextProvider>\n\t\t</Grid>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ChakraProvider, CSSReset } from \"@chakra-ui/react\";\nimport \"@fontsource/amatic-sc\";\nimport { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n\tfonts: {\n\t\theading: \"Amatic SC\",\n\t},\n});\n\nReactDOM.render(\n\t<ChakraProvider theme={theme}>\n\t\t<CSSReset />\n\t\t<App />\n\t</ChakraProvider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}